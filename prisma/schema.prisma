generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

model Accounts {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String     @unique
  password    String
  createdAt   DateTime   @default(now())
  user        User[]
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  password    String
  cpf         Int        @unique
  type        Role       @default(WAITER)
  avatar      String?
  createdAt   DateTime   @default(now())
  account     Accounts   @relation(fields: [accountId], references: [id])
  accountId   String     @db.ObjectId
  order       Order[]
}

model Category {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  icon        String
  name        String
  products    Products[]
}

model Products {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  imagePath   String
  price       Int
  ingredients Json?
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String     @db.ObjectId
  orderProducts OrderProducts[]
}

model Order {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  status      Status     @default(WAITING)
  createdAt   DateTime   @default(now())
  paid        Boolean    @default(false)
  paymentType String?    
  orderProducts OrderProducts[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
  table       Table      @relation(fields: [tableId], references: [id])
  tableId     String     @db.ObjectId
}

model OrderProducts {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  quantity    Int        @default(1)
  order       Order      @relation(fields: [orderId], references: [id])
  orderId     String     @db.ObjectId
  products    Products   @relation(fields: [productsId], references: [id])
  productsId  String     @db.ObjectId
}

model Table {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  status      Boolean    @default(false)
  number      Int       
  order       Order[] 
}

enum Role {
  ADMIN
  WAITER
  KITCHEN
  MANAGER
}

enum Status {
  WAITING
  CONFIRMED
  IN_PRODUCTION
  DONE
}